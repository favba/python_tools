#!/usr/bin/env python
"""
Print field value at a given place
"""
import numpy as np
import sys
from globalfile import readglobal
import argparse
import os

parser = argparse.ArgumentParser(description='Print field value at a given place')
parser.add_argument("file", type = str, help = "file with data")
parser.add_argument("i", type = int, help = "x index")
parser.add_argument("j", type = int, help = "y index")
parser.add_argument("k", type = int, help = "z index")

args = parser.parse_args()

if os.path.exists('./global'): path='./'
elif os.path.exists('../global'): path='../'
elif os.path.exists('../../global'): path='../../'
elif os.path.exists('../../../global'): path='../../../'
elif os.path.exists('../../../../global'): path='../../../../'
elif os.path.exists('../../../../../global'): path='../../../../../'
else: path = input('Please specify global file directory path: ')

nx,ny,nz,xDomainSize,yDomainSize,zDomainSize = readglobal(path=path,tell=False)


sizefile = os.path.getsize(args.file)

if sizefile == nx*ny*nz*8 :
  dtype='float64'
  field = np.memmap(sys.argv[1],shape=(nx,ny,nz),order='F',dtype='float64',mode='r')
elif sizefile == (nx+2)*ny*nz*8: 
  dtype='float64'
  field = np.memmap(sys.argv[1],shape=(nx+2,ny,nz),order='F',dtype='float64',mode='r')[:-2,:,:]
elif sizefile == nx*ny*nz*4 :
  dtype='float32'
  field = np.memmap(sys.argv[1],shape=(nx,ny,nz),order='F',dtype='float32',mode='r')
elif sizefile == (nx+2)*ny*nz*4: 
  dtype='float32'
  field = np.memmap(sys.argv[1],shape=(nx+2,ny,nz),order='F',dtype='float32',mode='r')[:-2,:,:]

print('{}[{}, {}, {}] = {}'.format(args.file,args.i,args.j,args.k,field[args.i,args.j,args.k]))
